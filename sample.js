// Generated by LiveScript 1.2.1
;(async function(){
  var i$, ref$, len$, xz, t, b, own$ = {}.hasOwnProperty, slice$ = [].slice, arrayFrom$ = Array.from || (x => slice$.call(x, 0));
  for (let i$ = 0, len$ = (ref$ = arr).length; i$ < len$; ++i$) {
    (fn$.call(this, i$, ref$[i$]));
  }
  for (let i$ in ref$ = obj) {
    (fn1$.call(this, i$, ref$[i$]));
  }
  for (let i$ in ref$ = obj) {
    (fn2$.call(this, i$));
  }
  for (let i$ in ref$ = obj) {
    (fn3$.call(this, ref$[i$]));
  }
  for (let i$ in ref$ = b) if (own$.call(ref$, i$)) {
    (fn4$.call(this, i$));
  }
  t = 4;
  b = (await import('https://cdn.skypack.dev/@octokit/rest'));
  import * from('https://cdn.skypack.dev/@octokit/rest');
  asd['class'] = 120;
  (async function(){
    var a, asd, fn, fm, that, add, b, num, hex, base, aa, bb, hmm, ref$, t, ref1$, regex, gg, res$, i$, ridx$, v;
    this.item = this.items.find(function(it){
      return (it != null ? it.value : void 8) === this.attrs.value;
    });
    if (a = b) {
      789;
    }
    "\u0065ag\u4E0dr\u{45}v\u{1f5c6}\u{ffff}fm\xa0 \x21";
    asd = mi(((a, arg$, ...c) => {
      var v, d, sdf;
      a == null && (a = 8);
      a = slice$.call((arg$ != null
        ? arg$
        : {}).b);
      c++;
      c = 4;
      v = c[0], d = slice$.call(c, 1);
      this[4]["Ã¡   d-jk\t\\ðŸ˜™"]["mHK"]['kk\'sad"\'"sd"'];
      this.ab - 45 / a / iv;
      "bear " + ab + "-78ao-o";
      "bear " + this.cd;
      "bear " + this;
      "bear #@";
      "bear #4";
      "bear #4we";
      "bear #@5";
      "bear #@5qw";
      "bear #@'ef'";
      "bear " + this.gh;
      sdf = function(){
        this.ij;
        "GHi " + this.kl;
      };
    }));
    arr.find(((it) => {
      return it.a;
    }));
    function mdddd(arg$, arg1$, arg2$){
      var ref$, cn, nn, j;
      mm.prototype.t = (ref$ = +arg$) != null ? ref$ : 7;
      cn = (ref$ = -arg1$) != null ? ref$ : 8;
      ref$ = arg2$ != null
        ? arg2$
        : [], nn = ref$[0], j = ref$[1];
      arguments[4].prototype.mJ;
    }
    fn = function(a, arg$, d){
      var ref$, b, ref1$, c;
      ref$ = arg$ != null
        ? arg$
        : [], b = (ref1$ = ref$[0]) != null ? ref1$ : 9, c = ref$[1];
    };
    fn = function(a, arg$, d){
      var ref$, b, ref1$, c;
      ref$ = arg$ != null
        ? arg$
        : [], b = (ref1$ = ref$[0]) != null ? ref1$ : 9, c = ref$[1];
    };
    fm = function(i, arg$, l){
      var ref$, j, ref1$, k;
      ref$ = arg$ != null
        ? arg$
        : {}, j = (ref1$ = ref$.j) != null ? ref1$ : 9, k = ref$.k;
    };
    fm = function(i, arg$, l){
      var ref$, j, ref1$, k;
      ref$ = arg$ != null
        ? arg$
        : {}, j = (ref1$ = ref$.j) != null ? ref1$ : 9, k = ref$.k;
    };
    12 + 13;
    if (that = isString) {
      m(that);
    }
    add = function(a, ...b){
      return this.c;
    };
    add = ((a) => {
      var i$, b, res$, j$, ref$, d, m, g;
      res$ = [];
      for (j$ = 1 < (i$ = arguments.length - 2) ? 1 : (i$ = 1); j$ < i$; ++j$) {
        res$.push(arguments[j$]);
      }
      b = res$; ref$ = (ref$ = arguments[i$]) != null
        ? ref$
        : [], d = ref$[0], m = ref$[1]; g = arguments[i$ + 1];
      return c;
    });
    b = (import$({}, mm));
    switch (xx) {
    case 'DF':
      24;
      break;
    default:
      25;
    }
    (await add("sao: " + this.okBaby + ".interp.er%", 51));
    in$(a, b);
    num = -45n;
    hex = -0x4fn;
    base = 499;
    aa = 13e6;
    bb = 13;
    this.asd.yu;
    3 + 4 ** -sertt;
    hmm = 1;
    hmm = hmm ** 8;
    6 + 15 / 4 - 78;
    9 + ((8) % (ref$ = 3) + ref$) % ref$ - 6;
    num /= t = 4;
    num /= (ref$ = {
      ff: ff
    }, import$(ref$, x), import$(ref$, y), ref$.t = (ref1$ = {
      r: r
    }, import$(ref1$, tm), ref1$.c = c, ref1$), ref$);
    num /= [9, 6].concat(arrayFrom$(w), [ccc]);
    num /= 8 + hex;
    num /= 8 ** hex;
    num /= Math.ceil(41 + 3);
    num = ((num) % (ref$ = 8 + hex) + ref$) % ref$;
    regex = /asdm78*(?=sd).+\//gsu.o;
    RegExp('h   as|[ ]ij ' + this.aj + '\\nkk\\tmo\\n@a ' + this.regex, 'g');
    /(?<=^[A-Z]\.\s*[a-z-]+\s)[a-z-]+|(?<=^[A-Z]\.\s*[-a-z]\.\s*)[-a-z]+|(?<=^[A-Z][a-z]+\s[-a-z]+\s)[-a-z]+|(?<=^[A-Z][a-z]+\s[-a-z]\.\s*)[-a-z]+/;
    /rt/mi;
    aa = "h   hojk";
    aa = aa + "h   ho\njk";
    res$ = [];
    for (i$ = -4; i$ <= 90; ++i$) {
      ridx$ = i$;
      res$.push(ridx$);
    }
    gg = res$;
    slice$.call(arr, 16, 60 + 1 || 9e9);
    slice$.call(arr, 16, 60);
    for (i$ = 2; i$ <= 13; i$ += 3) {
      i$;
    }
    repeatString$('m', 44);
    ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r"];
    for (i$ = 0; i$ <= 9; ++i$) {
      v = i$;
      console.log(v);
    }
    import$(a, b);
    importAll$(a, b);
    // "" * -1
    repeatString$("", -1);
    // "" * 0
    "";
    // "" * 1
    "";
    // "" * 2
    repeatString$("", 2);
    // "" * num
    repeatString$("", num);
    // "" * -num
    repeatString$("", -num);
    // "R" * -1
    repeatString$("R", -1);
    // "R" * 0
    "";
    // "R" * 1
    "R";
    // "R" * 2
    repeatString$("R", 2);
    // "R" * -2
    repeatString$("R", -2);
    // "R" * num
    repeatString$("R", num);
    // "R" * -num
    repeatString$("R", -num);
    // [] * -1
    repeatArray$([], -1);
    // [] * 0
        [];
    // [] * 1
    [];
    // [] * 2
    repeatArray$([], 2);
    // [] * num
    repeatArray$([], num);
    // [] * -num
    repeatArray$([], -num);
    // [5 4] * -1
    repeatArray$([5, 4], -1);
    // [5 4] * 0
        5;
    4;
    [];
    // [5 4] * 1
    [5, 4];
    // [5 4] * 2
    repeatArray$([5, 4], 2);
    // [5 4] * num
    repeatArray$([5, 4], num);
    // [5 4] * -num
    repeatArray$([5, 4], -num);
  })();
  function fn$(iii, vvv){
    if (vvv === 1 && iii === 2) {
      break;
    } else {
      vvv = vvv.trim();
    }
  }
  function fn1$(kaka, val){
    123;
    (function(gc){
      45;
    }.call(this, 1));
    kaka += 1;
  }
  function fn2$(kaka){
    123;
  }
  function fn3$(val){
    123;
  }
  function fn4$(a){
    c(a);
  }
  function import$(obj, src){
    return Object.assign(obj, src);
  }
  function in$(x, xs){
    return [].includes.call(xs, x);
  }
  function repeatString$(str, n){
    return str.repeat(n < 0 ? 0 : n);
  }
  function importAll$(obj, src){
    return Object.assign(obj, src);
  }
  function repeatArray$(arr, n){
    for (var r = []; n-- > 0;) r.push(...arr);
    return r;
  }
}).call(this);
